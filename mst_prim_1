

import sys
# 노드 수
n = 7
#
s = 0

# 인접리스트 입력그래프
g = [None] * n # 리스트 구현
g[0] = [(1,9),(2,10)] # 리스트 안의 튜플로 표현
g[1] = [(0,9),(3,10),(4,5),(6,3)]
g[2] = [(0,10),(3,9),(4,7),(5,2)]
g[3] = [(1,10),(2,9),(5,4),(6,8)]
g[4] = [(1,5),(2,7),(6,1)]
g[5] = [(2,2),(3,4),(6,6)]
g[6] = [(1,3),(3,8),(4,1),(5,6)]

visited = [False] * n
d = [sys.maxsize] * n # 각원소 최댓값
d[s] = 0 # 초기화
prev = [None] * n # 트리 간선 추출
prev[s] = s

if __name__ == '__main__':

    for k in range(n):
        m = -1 # min 버텍스
        min = sys.maxsize
        for j in range(n):
            if not visited[j] and d[j] < min:
                min = d[j]
                m = j
        visited[m] = True

        for w, wt in list(g[m]):
            if not visited[w] :
                if wt < d[w]:
                    d[w]=wt
                    prev[w]=m


mst_cost = 0
for i in range(1,n):
    print("(%d,%d)"% (i,prev[i]) , end='')
    mst_cost += d[i]

print("","최소신장", mst_cost , end='')
