# 문제: 1과 0으로 이루어진 array에서 1과 0의 갯수가 같은 subarray의 최대길이는 몇 인가?

from typing import List  

def findMaxLength(nums: List[int]) -> int:
    
    # 리스트 길이 만큼 반복 
    for idx in range(len(nums)):
    # 0으로 이뤄진 값 -1로 치환 or abababab 에서 0 , -1 로 치환 
      if nums[idx] == 0 :
        nums[idx] = -1
    
    # 순회하면서 누적 합계를 저장하는 어레이
    cml_sums = []
    # 합계 저장하는 변수 초기 값 지정 
    tmp_sum = 0
    for num in nums:
      # temp_sum에 합계 업데이트  
      tmp_sum += num
      # cumulate sum으로 구성된 리스트 업데이트   cml_sums = [ sum0 , sum1 .....]
      cml_sums.append(tmp_sum)
    
    # 비어있는 딕셔너리 생성
    table = {}
    max_length = 0
    # 딕셔너리 시작점 0 값 -1 지정  ????
    table[0] = [-1]
    
    # 인덱스와 누적 sum 이 들어있는 리스트 순회 ex)(0,-1),(1,0),(2,1),(3,2),(4,1),(5,0) ....
    for idx, cml_sum in enumerate(cml_sums): 
        # 테이블(딕셔너리)에 합계 합 / 변수 없다면 리스트의 인덱스를 테이블에 업데이트 ? [idx1...]
        # 딕셔너리 구성 cum_sum 리스트 / idx 리스트 
      if cml_sum not in table:
        table[cml_sum] = [idx]
      # 테이블(딕셔너리)에 합계 합 /변수 있으면 리스트의 인덱스를 테이블에 업데이트 ?  [ idx1 , idx2 ,idx3 ... ]
      else:
        table[cml_sum].append(idx)
      
     # 테이블의 합계값 (indices = 0 ,1,2,3,4....인 값) ????
      indices = table[cml_sum]
    # 테이블의 cml_sum = 0 ,1,2,3,4 .....에 속한 인덱스중 0 와 마지막 값 
      first_idx = indices[0]
      last_idx = indices[-1]
    # 테이블의 인덱스 길이 업데이트  
      length = last_idx - first_idx
    #  max_length 업데이트    
      max_length = max(max_length,length)
      
    return max_length

findMaxLength(nums=[1,-1,1,1,1,-1,-1,1,1])
