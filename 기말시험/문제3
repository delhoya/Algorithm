
# 1 선형 조사법 
class hashLinear:
    def __init__(self,size):
        self.size = size
        self.hash_key_table = [None] * size

    def hash (self,key):
        return key % self.size

    def put (self,key):
        # 처음 받은 key 값 해시값으로 변환
        hash = self.hash(key)
        # 변환한 hash 값 temp 에 저장
        temp_hash = hash
        count = 0

        while True:
            # key -> Hash 값을 hash_key table 에 삽입하는 과정
            if self.hash_key_table[temp_hash] == None:
                self.hash_key_table[temp_hash] = key
                # 삽입한 hash 값 리턴
                print(self.hash(key))
                return
            # key_table 에서 충돌 일 경우
            while self.hash_key_table[temp_hash] != None:
                # Crash (C) 충돌 출력
                print("C",end='')
                # 오른칸 이동
                count +=1
                # 해쉬 재설정
                temp_hash = (hash + count) % self.size
                # 비어있으면 삽입
                if self.hash_key_table[temp_hash] == None:
                    self.hash_key_table[temp_hash] = key
                    # 해쉬값 리턴
                    print(temp_hash)
                    return

    def get (self,key):
        # 처음 받은 key 값 해시값으로 변환
        hash = self.hash(key)
        # 변환한 hash 값 temp 에 저장
        temp_hash = hash
        # 인덱스 1부터 시작
        count =  1
        # 키 테이블이 비어있을때까지 반복해서 탐색
        while self.hash_key_table[temp_hash] != None:
            # 키값이 일치한다면
            if self.hash_key_table[temp_hash] == key:
                # 해시값, 키 값 리턴 함수 종료
                return print(temp_hash,key)
            # 바로 옆 검사
            temp_hash = (hash + count) % self.size
            # 카운트 수 +1
            count += 1
            # 다음 hash 값과 똑같을때는? 탐색 실패 (-1 출력)
            if temp_hash == hash :
                return print("-1")
        # 테이블이 비어있을 경우 -1 출력
        return print("-1")

    def print_hash(self):
        for i in range(self.size):
            temp = self.hash_key_table[i]
            print(temp,'',end = '')
        print()


if __name__ == '__main__':

    hash = hashLinear(int(input()))

    while (True):
        text = input().split()
        if text[0] == "i":
            hash.put(int(text[1]))
        if text[0] == "s":
            hash.get(int(text[1]))
        if text[0] == "e":
            exit()
        if text[0] == "p":
            hash.print_hash()

#2 이차조사법 


#3 이중해시법

#4 체이닝법
