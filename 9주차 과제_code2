class Bheap:
    def __init__(self, a):
        self.a = a
        self.n = len(a) - 1

    def create_heap(self):
        for i in range(self.n // 2, 0, -1):
            self.downheap(i)

    def insert(self, key_value):
        self.n += 1
        self.a.append(key_value)
        self.upheap(self.n)

    def delete_min(self):
        if self.n == 0:
            print('empty')
            return None
        min = self.a[1]
        self.a[1], self.a[-1] = self.a[-1], self.a[1]
        del self.a[-1]
        self.n -= 1
        self.downheap(1)
        return min

    def downheap(self, i):
        while 2 * i <= self.n:
            k = 2 * i
            if k < self.n and self.a[k][0] > self.a[k + 1][0]:
                k += 1
            if self.a[i][0] < self.a[k][0]:
                break
            self.a[i], self.a[k] = self.a[k], self.a[i]
            i = k

    def upheap(self, j):
        while j > 1 and self.a[j // 2][0] > self.a[j][0]:
            self.a[j], self.a[j // 2] = self.a[j // 2], self.a[j]
            j = j // 2

    def print_heap(self):
        for i in range(1, self.n + 1):
            print("[%2d" % self.a[i][0], self.a[i][1], "]", end='')
        print("힙크기:", self.n)


if __name__ == '__main__':
    a = [None] * 1
    a.append([90, "A"])
    a.append([80, "P"])
    a.append([70, "M"])
    a.append([50, "L"])
    a.append([60, "G"])
    a.append([20, "C"])
    a.append([30, "O"])
    a.append([10, "a"])
    a.append([40, "K"])
    b = Bheap(a)
    print("힙 만들기전")
    b.print_heap()
    print("최소힙")
    b.create_heap()
    b.print_heap()
    print("최소값삭제")
    print(b.delete_min())
    b.print_heap()
    b.insert([5, "pp"])
    print("5삽입후")
    b.print_heap()
